{"version":3,"sources":["components/feedback/statistics/Statistics.module.css","components/feedback/section/Section.module.css","components/feedback/feedbackOptions/FeedbackOptions.module.css","components/container/Container.module.css","components/feedback/notification/Notification.module.css","components/container/Container.jsx","components/feedback/feedbackOptions/FeedbackOptions.jsx","components/feedback/notification/Notification.jsx","components/feedback/section/Section.jsx","components/feedback/statistics/Statistics.jsx","components/feedback/Feedback.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","styles","container","FeedbackOptions","options","onLeaveFeedback","bntList","Object","keys","map","option","btnItem","btn","type","onClick","Notification","message","Section","title","Statistics","good","neutral","bad","total","positivePercentage","Math","round","list","item","heading","data","Feedback","state","event","label","target","textContent","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","React","Component","defaultProps","initialValue","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4c55b21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3eVVO\",\"heading\":\"Statistics_heading__Q8JbN\",\"list\":\"Statistics_list__1QEOi\",\"item\":\"Statistics_item__3ZAA_\",\"data\":\"Statistics_data__101ly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1ld55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bntList\":\"FeedbackOptions_bntList__3pilV\",\"btnItem\":\"FeedbackOptions_btnItem__3Jdtu\",\"btn\":\"FeedbackOptions_btn__1tSxd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__PyCKQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2WM7M\"};","import styles from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul className={styles.bntList}>\r\n      {Object.keys(options).map(option => {\r\n        return (\r\n          <li className={styles.btnItem} key={option}>\r\n            <button\r\n              className={styles.btn}\r\n              type=\"button\"\r\n              onClick={onLeaveFeedback}\r\n            >\r\n              {option}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// const FeedbackOptions = ({\r\n//   onLeaveFeedback,\r\n//   options,\r\n//   // onLeavePositiveFeedback,\r\n//   // onLeaveNeutralFeedback,\r\n//   // onLeaveNegativeFeedback,\r\n// }) => (\r\n//   <ul className={styles.bntList}>\r\n//     <li className={styles.btnItem}>\r\n//       <button type=\"button\" className={styles.btn} onClick={onLeaveFeedback}>\r\n//         Good\r\n//       </button>\r\n//     </li>\r\n\r\n//     <li className={styles.btnItem}>\r\n//       <button type=\"button\" className={styles.btn} onClick={onLeaveFeedback}>\r\n//         Neutral\r\n//       </button>\r\n//     </li>\r\n\r\n//     <li className={styles.btnItem}>\r\n//       <button type=\"button\" className={styles.btn} onClick={onLeaveFeedback}>\r\n//         Bad\r\n//       </button>\r\n//     </li>\r\n//   </ul>\r\n// );\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Statistics.module.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  total = good + neutral + bad;\r\n  positivePercentage = Math.round((good / (good + bad + neutral)) * 100);\r\n\r\n  return (\r\n    <>\r\n      <p className={styles.title}>Statistics</p>\r\n\r\n      <ul className={styles.list}>\r\n        <li className={styles.item}>\r\n          <p className={styles.heading}>\r\n            Good:<span className={styles.data}>{good}</span>\r\n          </p>\r\n        </li>\r\n\r\n        <li className={styles.item}>\r\n          <p className={styles.heading}>\r\n            Neutral:\r\n            <span className={styles.data}>{neutral}</span>\r\n          </p>\r\n        </li>\r\n\r\n        <li className={styles.item}>\r\n          <p className={styles.heading}>\r\n            Bad:<span className={styles.data}>{bad}</span>\r\n          </p>\r\n        </li>\r\n\r\n        <li className={styles.item}>\r\n          <p className={styles.heading}>\r\n            Total:<span className={styles.data}>{total}</span>\r\n          </p>\r\n        </li>\r\n\r\n        <li className={styles.item}>\r\n          <p className={styles.heading}>\r\n            Positive feedback:\r\n            <span className={styles.data}>{positivePercentage} %</span>\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nimport FeedbackOptions from './feedbackOptions';\r\nimport Notification from './notification';\r\nimport Section from './section';\r\nimport Statistics from './statistics';\r\n\r\nimport styles from './section/Section.module.css';\r\nclass Feedback extends React.Component {\r\n  static defaultProps = {\r\n    initialValue: 0,\r\n    children: [],\r\n  };\r\n\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = event => {\r\n    const label = event.target.textContent;\r\n\r\n    this.setState(prevState => ({ [label]: (prevState[label] += 1) }));\r\n  };\r\n  // leavePositiveFeedback = () => {\r\n  //   this.setState(prevState => {\r\n  //     return {\r\n  //       good: prevState.good + 1,\r\n  //     };\r\n  //   });\r\n  // };\r\n\r\n  // leaveNeutralFeedback = () => {\r\n  //   this.setState(prevState => {\r\n  //     return {\r\n  //       neutral: prevState.neutral + 1,\r\n  //     };\r\n  //   });\r\n  // };\r\n\r\n  // leaveNegativeFeedback = () => {\r\n  //   this.setState(prevState => {\r\n  //     return {\r\n  //       bad: prevState.bad + 1,\r\n  //     };\r\n  //   });\r\n  // };\r\n  countTotalFeedback() {\r\n    return this.state.good + this.state.bad + this.setState.neutral;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    return (\r\n      (this.state.good /\r\n        (this.state.good + this.state.neutral + this.state.bad)) *\r\n      100\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <Section className={styles.container} title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          onLeaveFeedback={this.onLeaveFeedback}\r\n          options={this.state}\r\n          // onLeavePositiveFeedback={this.leavePositiveFeedback}\r\n          // onLeaveNeutralFeedback={this.leaveNeutralFeedback}\r\n          // onLeaveNegativeFeedback={this.leaveNegativeFeedback}\r\n        />\r\n        {good + bad + neutral ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback}\r\n            positivePercentage={this.countPositiveFeedbackPercentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import Container from './components/container';\n//import Section from './components/feedback/section/Section';\nimport Feedback from './components/feedback';\n//import FeedbackOptions from './components/feedback/feedbackOptions/FeedbackOptions';\n//import Statistics from './components/feedback/statistics/Statistics';\n//import Notification from './components/feedback/notification/Notification';\n\nfunction App() {\n  return (\n    <Container>\n      <Feedback />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}